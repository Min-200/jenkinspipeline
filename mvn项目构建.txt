node {
    // 初始化
    def svnRepoUrl = 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
// 定义邮件通知收件人列表
    def recipients = ''
    def profile= ""
    def deployDstHost = "${M_REPO_IP}"
	def deployDstStartPath = "${M_REPO_PATH}"
    //def scpdir = "${D_SCP_DIR}"
    def scpdir = "${M_SCP_DIR}"
    def JOBNAME = "${JOB_BASE_NAME}"
    def urlfile = "${JENKINS_HOME}/common-extended"
    
    
    stage('Initialization') {
        echo "Job name: ${env.JOB_BASE_NAME}"
        mvnHome = tool 'M3'
        jdkHome = tool 'JDK_1.8'        //  指定JDK版本号，只会对构建产生影响
        env.JAVA_HOME = "${jdkHome}"
        env.PATH = "${env.JAVA_HOME}/bin:${env.PATH}"
        command = "${mvnHome}/bin/mvn -U -B -Dmaven.test.skip=true clean  deploy"

		

        // 初始化函数库扩展组件
    }

    // 代码检出
    stage('Checkout') {
        checkout([$class: 'SubversionSCM', additionalCredentials: [], excludedCommitMessages: '', excludedRegions: '', excludedRevprop: '', excludedUsers: '', filterChangelog: false, ignoreDirPropChanges: false, includedRegions: '', locations: [[credentialsId: 'XXX-a3d2-4c71-XXX-66f5a44a94d1', depthOption: 'infinity', ignoreExternalsOption: true, local: '.', remote: svnRepoUrl]], workspaceUpdater: [$class: 'UpdateUpdater']])
        
      }
    
    parallel (
        /*Analysis: {
            stage('SonarQube analysis') {
                // 使用特定的JDK版本运行SonarScanner
                withEnv(["JAVA_HOME=${tool 'JDK_1.8'}"]) {
                    // requires SonarQube Scanner 2.8+
                    def scannerHome = tool 'sonar-scanner-2.8';
                    withSonarQubeEnv('SonarQube186') {
                        sh "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        },*/
        Build: {
            // 执行构建
            stage('Build') {
               //sh "mvn -Dmaven.test.skip=true clean package"
                sh "cat /dev/null > ${urlfile}/${JOB_BASE_NAME}.txt"
                
                if("${profile}" == ''){
                        sh """
                            #find . -type d|xargs chmod 755
                            #find . -type f|xargs chmod 644
                            chmod -R 755 .
                            java -version
                            ${command}
                            time=`date +"%Y-%m-%d_%H-%M-%S"`
                            
                            set +x
                            
                            systemname=`echo ${JOBNAME} | awk -F'_' '{ print \$3 }'`
                            dirname=`echo ${JOB_NAME} | awk -F'/' '{ print \$1 }'`
                            svnurl=`cat /jenkinsdata/data/.jenkins/jobs/\$dirname/jobs/${JOB_BASE_NAME}/builds/${BUILD_ID}/revision.txt`
                            svnnum=`echo \${svnurl##*/}`
                            des_url="http://${deployDstHost}/build/\$dirname/\$systemname/${JOB_BASE_NAME}/\$svnnum-${BUILD_ID}-\$time"
                            scp_url="${scpdir}/\$dirname/\$systemname/${JOB_BASE_NAME}/\$svnnum-${BUILD_ID}-\$time"
                            echo \$des_url
                            echo \$scp_url
                            
                            list=`find . -name "target"`
                            ssh ${deployDstHost} mkdir -p \$scp_url
                            set -x
                            for i in \$list
                            do
                                #echo \$i
                                pack_dir=`dirname \${i:2}`
                                cd \$i
                                package=`ls | egrep '*.war\$|*.jar\$|*.tar.gz\$|*.zip\$' || echo `
                                
                                
                                for x in \$package
                                do
                                    if [ -n \$x  ];then
                                        echo \$x
                                        url="\${i}/\${x}"
                                        echo \$url
                                        md5=`md5sum \$x | awk '{print \$1}'`
                                        #echo \$md5
                                        scp -p \$x  ${deployDstHost}:\$scp_url
                                    
                                        echo "\$des_url/\${x}&\$md5" >> ${urlfile}/${JOB_BASE_NAME}.txt
                                    fi
                                done
                            
                                pwd
                                cd -
                                ssh ${deployDstHost} chmod -R 755 ${scpdir}
                                
                            done
                            
                            """
                        }else {
                        sh """
                                #find . -type d|xargs chmod 755
                                #find . -type f|xargs chmod 644
                                chmod -R 755 .
                                java -version
                             
                                time=`date +"%Y-%m-%d_%H-%M-%S"`
                                set +x
                                systemname=`echo ${JOBNAME} | awk -F'_' '{ print \$3 }'`
                                dirname=`echo ${JOB_NAME} | awk -F'/' '{ print \$1 }'`
                                svnurl=`cat /jenkinsdata/data/.jenkins/jobs/\$dirname/jobs/${JOB_BASE_NAME}/builds/${BUILD_ID}/revision.txt`
                                svnnum=`echo \${svnurl##*/}`
                                
                                
                                for i in ${profile}
                                do
                                    des_url="http://${deployDstHost}/build/\$dirname/\$systemname/${JOB_BASE_NAME}/\$i/\$svnnum-${BUILD_ID}-\$time"
                                    scp_url="${scpdir}/\$dirname/\$systemname/${JOB_BASE_NAME}/\$i/\$svnnum-${BUILD_ID}-\$time"
                                    #echo \$des_url
                                    #echo \$scp_url
                                    echo "-------------------------------------------------------------------------------------------"
                                    echo "start \$i"
                                    echo "${command} -P\$i"
                                    ${command} -P\$i
                                    list=`find . -name "target"`
                                    ssh ${deployDstHost} mkdir -p \$scp_url

                                    for l in \$list
                                    do
                                        #echo \$l
                                        pack_dir=`dirname \${l:2}`
                                        cd \$l > /dev/null
                                        package=`ls | egrep '*.war\$|*.jar\$|*.tar.gz\$|*.zip\$' || echo `
                                        
                                            for x in \$package
                                            do
                                                if [ -n \$x  ];then
                                                    #echo \$package
                                                    echo \$x
                                                    url="\${l}/\${x}"
                                                    echo \$url
                                                    md5=`md5sum \$x | awk '{print \$1}'`
                                                    #echo \$md5
                                                    scp -p \$x  ${deployDstHost}:\$scp_url
                                    
                                                    echo "\$des_url/\${x}&\$md5" >> ${urlfile}/${JOB_BASE_NAME}.txt
                                                fi
                                            done
                                            pwd
                                        
                                    cd - > /dev/null
                                    ssh ${deployDstHost} chmod -R 755 ${scpdir} 
                                        
                                    done
                                    
                                done
                                

                                
                            """
                }
                stage('packagelist'){
                    sh """
                    set +x 
                    allnum=`cat ${urlfile}/${JOB_BASE_NAME}.txt | wc -l`
                    echo "一共有\$allnum个包"
                    LIST=`cat ${urlfile}/${JOB_BASE_NAME}.txt`
                                for b in \$LIST
                                do
                                    url=`echo \$b    | awk -F"&" '{print \$1}'`
                                    md5=`echo \$b    | awk -F"&" '{print \$2}'`
                                    code=`curl -I -m 10 -o /dev/null -s -w %{http_code} \$url`
                                    if [ \$code != 200 ];then
                                        echo "--------------------------faield----------------------------"
                                    fi
                                    
                                    echo "URL:\$url"
                                    echo "状态码: \$code "
                                    echo "MD5: \$md5" 
                                done
                    
                    """
                    
                    
                }
                

            }
        }
    )
    stage('EMAIL'){
         emailext body: '''(本邮件是程序自动下发的，请勿回复！)<br/><hr/>

                项目名称：$PROJECT_NAME<br/><hr/>

                构建编号：$BUILD_NUMBER<br/><hr/>

                构建状态：SUCCESS<br/><hr/>

                触发原因：${CAUSE}<br/><hr/>

                构建日志地址：<a href="${BUILD_URL}console">${BUILD_URL}console</a><br/><hr/>

                构建地址：<a href="$BUILD_URL">$BUILD_URL</a><br/><hr/>

                变更集:${JELLY_SCRIPT,template="html"}<br/><hr/>''', mimeType: 'text/html',subject: '$PROJECT_NAME', to: recipients
      
               
        }
    
    
    
    
    
    
}
